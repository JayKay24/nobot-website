{"version":3,"sources":["app/actions/save-score.js","app/choices.js","app/classes/choice.js","app/constants/choices.js","app/constants/decisions.js","app/constants/screens.js","app/game.js","app/helpers/get-choice.js","app/helpers/get-score.js","app/helpers/random-choice.js","app/initialize.js","app/loaders/config-loader.js","app/loaders/image-loader.js","app/loaders/styles-loader.js","app/screen.js"],"names":["saveScore","whoWon","window","localStorage","currentScorePlayer","parseInt","getItem","currentScoreCPU","setItem","choices","onMadeChoice","initChoices","choiceMadeCallback","choiceScreen","imageElements","querySelector","appendChild","rock","paper","scissors","addEventListener","onChoiceClick","e","target","matches","msMatchesSelector","call","stopPropagation","choiceTarget","choice","dataset","cleanUpChoiceScreen","removeEventListener","removeChild","createImagesForResult","playerChoice","cpuChoice","resultScreen","playerDecision","getChoiceMade","cpuDecision","choiceResults","playerChoiceImage","cpuChoiceImage","cloneNode","classList","add","getChoiceElements","Choice","choiceName","beats","ROCK","PAPER","SCISSORS","PLAYER","CPU","DRAW","LOADING","CHOICE","RESULT","bootstrap","init","game","document","getElementById","config","style","backgroundImage","theme","path","images","background","fontFamily","winner","hasBeaten","initGame","then","getChoice","Error","getScore","player","cpu","randomChoice","random","Math","configuration","loadConfig","Promise","resolve","reject","fetch","response","json","getConfig","loadImage","imageSource","id","img","Image","className","src","onload","loadImages","length","console","warn","imagesToLoad","Object","keys","map","key","index","push","all","getImageElements","head","getElementsByTagName","loadStyles","customStyles","createCssFile","url","cssFile","createElement","rel","type","href","media","screenElements","hideScreenClass","fadeInClass","fadeOutClass","initScreens","screens","title","subtitle","textContent","getScreen","screen","screenRef","undefined","changeToScreen","remove","contains","updateResultScreen","results","score","feedback","replayButton","subtitleText","feedbackText","isDraw","labels","result","playerLabel","cpuLabel","won","lost","draw","replace","innerHTML","location","reload"],"mappings":"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","file":"public/rock-paper-scissors.1.0.0.js","sourcesContent":["import { PLAYER, CPU, DRAW } from './../constants/decisions';\r\n\r\nexport default function saveScore(whoWon) {\r\n  const { localStorage } = window;\r\n  const currentScorePlayer = parseInt(localStorage.getItem(PLAYER), 10) || 0;\r\n  const currentScoreCPU = parseInt(localStorage.getItem(CPU), 10) || 0;\r\n  \r\n  if (whoWon === PLAYER) {\r\n    localStorage.setItem(PLAYER, currentScorePlayer + 1);\r\n  } else if (whoWon === CPU) {\r\n    localStorage.setItem(CPU, currentScoreCPU + 1);\r\n  }\r\n};","import { LOADING, CHOICE, RESULT } from './constants/screens';\r\nimport { getImageElements } from './loaders/image-loader';\r\nimport { getScreen } from './screen';\r\nimport getChoice from './helpers/get-choice';\r\n\r\nlet choices = {};\r\nlet onMadeChoice;\r\n\r\nconst initChoices = (choiceMadeCallback) => {\r\n  onMadeChoice = choiceMadeCallback;\r\n  const choiceScreen = getScreen(CHOICE);\r\n  const imageElements = getImageElements();\r\n\r\n  choices = choiceScreen.querySelector('.choices');\r\n  choices.appendChild(imageElements.rock);\r\n  choices.appendChild(imageElements.paper);\r\n  choices.appendChild(imageElements.scissors);\r\n\r\n  choices.addEventListener('click', onChoiceClick);\r\n};\r\n\r\nconst onChoiceClick = (e) => {\r\n\r\n  const { target } = e;\r\n  const matches = target.matches || target.msMatchesSelector;\r\n\r\n  if (matches.call(target, 'img')) {\r\n    e.stopPropagation();\r\n    const choiceTarget = e.target;\r\n    const choice = getChoice(choiceTarget.dataset.choice);\r\n    onMadeChoice(choice);\r\n  }\r\n}\r\n\r\nconst cleanUpChoiceScreen = () => {\r\n  const imageElements = getImageElements();\r\n  choices.removeEventListener('click', onChoiceClick);\r\n  choices.removeChild(imageElements.rock);\r\n  choices.removeChild(imageElements.paper);\r\n  choices.removeChild(imageElements.scissors);\r\n};\r\n\r\nconst createImagesForResult = (playerChoice = {}, cpuChoice = {}) => {\r\n  const resultScreen = getScreen(RESULT);\r\n  const imageElements = getImageElements();\r\n\r\n  const playerDecision = playerChoice.getChoiceMade();\r\n  const cpuDecision = cpuChoice.getChoiceMade();\r\n\r\n  const choiceResults = resultScreen.querySelector('.choice-results');\r\n  const playerChoiceImage = imageElements[playerDecision];\r\n  let cpuChoiceImage;\r\n  \r\n  if (playerDecision === cpuDecision) {\r\n    cpuChoiceImage = playerChoiceImage.cloneNode();\r\n  } else {\r\n    cpuChoiceImage = imageElements[cpuDecision];\r\n  }\r\n\r\n  playerChoiceImage.classList.add('left');\r\n  cpuChoiceImage.classList.add('right');\r\n\r\n  choiceResults.appendChild(playerChoiceImage);\r\n  choiceResults.appendChild(cpuChoiceImage);\r\n\r\n};\r\n\r\nconst getChoiceElements = () => {\r\n  return choices;\r\n};\r\n\r\nexport { initChoices, getChoiceElements, cleanUpChoiceScreen, createImagesForResult };","export default class Choice {\r\n  constructor(choiceName, beats) {\r\n    this.choiceName = choiceName;\r\n    this.beats = beats;\r\n  }\r\n\r\n  getChoiceMade() {\r\n    return this.choiceName;\r\n  }\r\n\r\n  hasBeaten(choice = {}) {\r\n    return this.choiceName !== choice.beats && this.choiceName !== choice.choiceName;\r\n  }\r\n}","export const ROCK = 'rock';\r\nexport const PAPER = 'paper';\r\nexport const SCISSORS = 'scissors';","export const PLAYER = 'player';\r\nexport const CPU = 'cpu';\r\nexport const DRAW = 'draw';","export const LOADING = 'loading';\r\nexport const CHOICE = 'choice';\r\nexport const RESULT = 'result';","import loadStyles from './loaders/styles-loader';\r\nimport { loadImages, getImageElements } from './loaders/image-loader';\r\nimport { initScreens, getScreen, changeToScreen, updateResultScreen } from './screen';\r\nimport { LOADING, CHOICE, RESULT } from './constants/screens';\r\nimport { initChoices, cleanUpChoiceScreen } from './choices';\r\nimport getChoice from './helpers/get-choice';\r\nimport randomChoice from './helpers/random-choice';\r\nimport saveScore from './actions/save-score';\r\nimport { PLAYER, CPU, DRAW } from './constants/decisions';\r\nimport loadConfig, { getConfig } from './loaders/config-loader';\r\n\r\nconst bootstrap = () => {\r\n  init();\r\n  initScreens();\r\n  initChoices(onMadeChoice);\r\n  changeToScreen(CHOICE);\r\n}\r\n\r\nconst init = () => {\r\n  const game = document.getElementById('game');\r\n  const config = getConfig();\r\n  game.style.backgroundImage = `url(${config.theme.path}/${config.images.background})`;\r\n  game.style.fontFamily = config.theme.fontFamily;\r\n}\r\n\r\nconst onMadeChoice = (playerChoice) => {\r\n\r\n  cleanUpChoiceScreen();\r\n\r\n  const cpuChoice = getChoice(randomChoice());\r\n  \r\n  let winner;\r\n\r\n  if (playerChoice.hasBeaten(cpuChoice)) {\r\n    winner = PLAYER;\r\n  } else if (cpuChoice.hasBeaten(playerChoice)) {\r\n    winner = CPU;\r\n  } else {\r\n    winner = DRAW;\r\n  }\r\n\r\n  saveScore(winner);\r\n\r\n  updateResultScreen(playerChoice, cpuChoice);\r\n\r\n  changeToScreen(RESULT);  \r\n};\r\n\r\nconst initGame = () => {\r\n  loadConfig()\r\n    .then(() => {\r\n      loadStyles();\r\n      return loadImages();\r\n    })\r\n    .then(bootstrap);\r\n};\r\n\r\nexport default initGame;","import Choice from './../classes/choice';\r\nimport { ROCK, PAPER, SCISSORS } from './../constants/choices';\r\n\r\nexport default function getChoice(choice) {\r\n  switch (choice) {\r\n    case ROCK:\r\n      return new Choice(ROCK, SCISSORS);\r\n    case PAPER:\r\n      return new Choice(PAPER, ROCK);\r\n    case SCISSORS:\r\n      return new Choice(SCISSORS, PAPER)\r\n    default:\r\n      throw new Error('Choice not found', choice);\r\n  }\r\n}","import { PLAYER, CPU, DRAW } from './../constants/decisions';\r\n\r\nexport default function getScore(whoWon) {\r\n  const { localStorage } = window;\r\n  const currentScorePlayer = parseInt(localStorage.getItem(PLAYER), 10) || 0;\r\n  const currentScoreCPU = parseInt(localStorage.getItem(CPU), 10) || 0;\r\n  \r\n  return {\r\n    player: currentScorePlayer,\r\n    cpu: currentScoreCPU\r\n  }\r\n};","import Choice from './../classes/choice';\r\nimport { ROCK, PAPER, SCISSORS } from './../constants/choices';\r\n\r\nexport default function randomChoice() {\r\n  const random = Math.random();\r\n  if (random <= 0.33) {\r\n    return ROCK;\r\n  } else if (random <= 0.66) {\r\n    return PAPER;\r\n  } else {\r\n    return SCISSORS;\r\n  }\r\n}","import initGame from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  initGame();\r\n});\r\n","let configuration = {};\r\n\r\nconst loadConfig = (images = []) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch('game.json')\r\n    .then(response => response.json())\r\n    .then((config) => {\r\n      configuration = config;\r\n      resolve();\r\n    });\r\n  });\r\n};\r\n\r\nexport const getConfig = () => { \r\n  return configuration;\r\n}\r\n\r\nexport default loadConfig;","import { getConfig } from './config-loader';\r\n\r\nlet imageElements = {};\r\n\r\nconst loadImage = (imageSource, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    var img = new Image();\r\n    img.id = id;\r\n    img.className = 'choice';\r\n    img.src = imageSource;\r\n    img.dataset.choice = id;\r\n    img.onload = () => {\r\n      imageElements[id] = img;\r\n      resolve();\r\n    };\r\n  });\r\n}\r\n\r\nconst loadImages = () => {\r\n\r\n  const { theme, images } = getConfig();\r\n  const { path } = theme;\r\n\r\n  if (images.length === 0) {\r\n    console.warn('No images passed in');\r\n    return;\r\n  }\r\n\r\n  let imagesToLoad = [];\r\n\r\n  Object.keys(images).map((key, index) => {\r\n    const img = `${path}/${images[key]}`;\r\n    imagesToLoad.push(loadImage(img, key));\r\n  })\r\n\r\n  return Promise.all(imagesToLoad);\r\n};\r\n\r\nconst getImageElements = () => {\r\n  return imageElements;\r\n};\r\n\r\nexport { loadImages, getImageElements };","import { getConfig } from './config-loader';\r\n\r\nconst head = document.head || document.getElementsByTagName('head')[0];\r\n\r\nconst loadStyles = () => {\r\n  const { theme, customStyles } = getConfig();\r\n\r\n  customStyles.map(url => {\r\n    createCssFile(url);\r\n  });\r\n\r\n  // load in css for the theme\r\n  const { path } = theme;\r\n  createCssFile(`${path}/theme.css`);\r\n};\r\n\r\nconst createCssFile = (url) => {\r\n  const cssFile = document.createElement('link');\r\n  cssFile.rel = 'stylesheet';\r\n  cssFile.type = 'text/css';\r\n  cssFile.href = url;\r\n  cssFile.media = 'all';\r\n  head.appendChild(cssFile);\r\n}\r\n\r\nexport default loadStyles;","import { LOADING, CHOICE, RESULT } from './constants/screens';\r\nimport { getConfig } from './loaders/config-loader';\r\nimport { createImagesForResult } from './choices';\r\nimport getScore from './helpers/get-score';\r\n\r\nlet screenElements = {};\r\nconst hideScreenClass = 'is-hidden';\r\nconst fadeInClass = 'fade-in';\r\nconst fadeOutClass = 'fade-out';\r\n\r\nconst initScreens = () => {\r\n  const game = document.getElementById('game');\r\n  screenElements[LOADING] = game.querySelector('#loading-screen');\r\n  screenElements[CHOICE] = game.querySelector('#choice-screen');\r\n  screenElements[RESULT] = game.querySelector('#result-screen');\r\n\r\n  const { screens } = getConfig();\r\n  const { choice } = screens;\r\n  const { title, subtitle } = choice;\r\n\r\n  screenElements[CHOICE].querySelector('.title').textContent = title;\r\n  screenElements[CHOICE].querySelector('.subtitle').textContent = subtitle;\r\n};\r\n\r\nconst getScreen = (screen) => {\r\n  const screenRef = screenElements[screen];\r\n  if (screenRef !== undefined) {\r\n    return screenRef;\r\n  }\r\n  throw new Error('Could not find screen', screen);\r\n};\r\n\r\nconst changeToScreen = (screen) => {\r\n  const screenRef = screenElements[screen];\r\n  if (screenRef === undefined) {\r\n    throw new Error('Cannot change to screen that does not exist');\r\n  }\r\n  screenRef.classList.add(fadeInClass);\r\n  screenRef.classList.remove(hideScreenClass);\r\n  Object.keys(screenElements).map(key => {\r\n    if (screen !== key) {\r\n      const { classList } = screenElements[key];\r\n      if (classList.contains(hideScreenClass) === false) {\r\n        classList.add(hideScreenClass);\r\n      } else if (classList.contains(fadeInClass)) { \r\n        classList.remove(fadeInClass);\r\n      } else {\r\n        classList.add(hideScreenClass);\r\n        classList.remove(fadeInClass);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst updateResultScreen = (playerChoice = {}, cpuChoice = {}) => {\r\n\r\n  createImagesForResult(playerChoice, cpuChoice);\r\n\r\n  const results = getScreen(RESULT);\r\n\r\n  const subtitle = results.querySelector('.subtitle');\r\n  const score = results.querySelector('.score');\r\n  const feedback = results.querySelector('.feedback');\r\n  const replayButton = document.getElementById('replay-button');\r\n\r\n  const playerDecision = playerChoice.getChoiceMade();\r\n  const cpuDecision = cpuChoice.getChoiceMade();\r\n\r\n  let subtitleText;\r\n  let feedbackText;\r\n  let isDraw = false;\r\n\r\n  const { labels, screens } = getConfig();\r\n  const { result } = screens;\r\n  \r\n  const playerLabel = labels[playerDecision];\r\n  const cpuLabel = labels[cpuDecision];\r\n\r\n  if (playerChoice.hasBeaten(cpuChoice)) {\r\n    subtitleText = result.won;\r\n    feedbackText = result.feedback.won;\r\n  } else if (cpuChoice.hasBeaten(playerChoice)) {\r\n    subtitleText = result.lost;\r\n    feedbackText = result.feedback.lost;\r\n  } else {\r\n    isDraw = true;\r\n    subtitleText = result.draw;\r\n    feedbackText = result.feedback.draw;\r\n  }\r\n\r\n  if (!isDraw) {\r\n    feedbackText = feedbackText\r\n      .replace('{player}', `<strong>${playerLabel}</strong>`)\r\n      .replace('{cpu}', `${cpuLabel}`);\r\n  }\r\n\r\n  const {player, cpu} = getScore();\r\n\r\n  subtitle.textContent = subtitleText;\r\n  score.textContent = `${player}-${cpu}`;\r\n  feedback.innerHTML = feedbackText;\r\n\r\n  replayButton.addEventListener('click', () => {\r\n    window.location.reload();\r\n  })\r\n};\r\n\r\nexport { initScreens, getScreen, changeToScreen, updateResultScreen };"]}